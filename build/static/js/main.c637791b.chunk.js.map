{"version":3,"sources":["images/banner.png","components/Navbar/Navbar.js","components/Header/Header.js","StateProvider.js","components/Main/PQForms.js","components/Main/EForm.js","components/Main/EncryptOrDecrypt.js","components/Main/Main.js","components/Footer/Footer.js","App.js","serviceWorker.js","Reducer.js","index.js"],"names":["module","exports","Navbar","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","Banner","require","Header","Paper","elevation","style","background","component","gutterBottom","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","PQForms","dispatch","pValue","useRef","qValue","submit","useCallback","current","length","type","item","p","q","Grid","container","spacing","xs","FormControl","fullWidth","TextField","id","inputRef","label","justify","onClick","EForm","n","phi","evalue","e","EncryptOrDecrypt","d","cipher","message","messageInput","cipherInput","encryptMessage","decryptCipher","textAlign","multiline","rows","rowsMax","marginTop","Main","errorbag","useState","hasError","setHasError","handleSnackbarOpen","handleSnackbarClose","useEffect","Container","fixed","Snackbar","open","onClose","Alert","severity","map","error","key","Footer","App","Boolean","window","location","hostname","match","rando","power","a","b","BigInt","res","millerTest","checkPrime","i","state","action","console","log","toString","gcd","m","NaN","s","push","x","y","modInverse","character","charCodeAt","encrypted","String","fromCharCode","originalMessage","decrypted","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c637791b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.bcd1ca26.png\";","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Button from \"@material-ui/core/Button\";\n\nimport \"./Navbar.css\";\n\nfunction Navbar() {\n  return (\n    <div className=\"navbar\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className=\"navbar__icon\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className=\"navbar__title\">\n            RSA Calculator\n          </Typography>\n          <Button color=\"inherit\">Reset</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport \"./Header.css\";\nconst Banner = require(\"../../images/banner.png\");\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <Paper\n        className=\"header__background\"\n        elevation={0}\n        style={{\n          background:\n            \"linear-gradient(rgba(0, 0, 0, 0.5),rgba(0, 0, 0, 0.5)),url('\" +\n            Banner +\n            \"') no-repeat center center fixed\",\n        }}\n      >\n        <div className=\"header__bannerText\">\n          <Typography variant=\"h2\" component=\"h2\" gutterBottom>\n            RSA Calculator\n          </Typography>\n          <Typography variant=\"h4\" gutterBottom>\n            A program for calculating rsa algorithm and thus encrypting and\n            decrypting the messages\n          </Typography>\n        </div>\n      </Paper>\n    </div>\n  );\n}\n\nexport default Header;\n","// Setup data layer\n// We need this to track the changes\n\nimport React, { createContext, useContext, useReducer } from \"react\";\n\n// Data layer\nexport const StateContext = createContext();\n\n// build a provider\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import React, { useCallback, useRef } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport \"./PQForms.css\";\nimport { useStateValue } from \"../../StateProvider\";\n\nfunction PQForms() {\n  const [, dispatch] = useStateValue();\n\n  const pValue = useRef();\n  const qValue = useRef();\n\n  const submit = useCallback(() => {\n    if (pValue.current.value.length <= 0 || qValue.current.value.length <= 0)\n      return;\n\n    dispatch({\n      type: \"SET_P_AND_Q\",\n      item: {\n        p: pValue.current.value,\n        q: qValue.current.value,\n      },\n    });\n  }, [dispatch]);\n\n  return (\n    <Paper elevation={2} className=\"pqforms__container\">\n      <Typography variant=\"h5\" gutterBottom>\n        Enter two prime number <em>P</em> and <em>Q</em>, such that{\" \"}\n        <em>P * Q</em> is greater than 127.\n      </Typography>\n      <div className=\"pqforms__form\">\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <FormControl\n              fullWidth\n              className=\"pqforms__formControl\"\n              variant=\"outlined\"\n            >\n              <TextField\n                id=\"outlined-p-value\"\n                type=\"number\"\n                inputRef={pValue}\n                variant=\"outlined\"\n                label=\"Enter a prime number, P\"\n              />\n            </FormControl>\n          </Grid>\n          <Grid item xs={6}>\n            <FormControl\n              fullWidth\n              className=\"pqforms__formControl\"\n              variant=\"outlined\"\n            >\n              <TextField\n                id=\"outlined-q-value\"\n                type=\"number\"\n                inputRef={qValue}\n                variant=\"outlined\"\n                label=\"Enter a prime number, Q\"\n              />\n            </FormControl>\n          </Grid>\n        </Grid>\n      </div>\n      <Grid container justify=\"center\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"pqforms__button\"\n          onClick={submit}\n        >\n          Next\n        </Button>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default PQForms;\n","import React, { useCallback, useRef } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport \"./EForm.css\";\nimport { useStateValue } from \"../../StateProvider\";\n\nfunction EForm() {\n  const [{ n, phi }, dispatch] = useStateValue();\n\n  const evalue = useRef();\n\n  const submit = useCallback(() => {\n    if (evalue.current.value.length <= 0) return;\n\n    dispatch({\n      type: \"SET_E\",\n      item: {\n        e: evalue.current.value,\n      },\n    });\n  }, [dispatch]);\n\n  return (\n    <Paper elevation={2} className=\"eform__container\">\n      <Typography variant=\"h5\" gutterBottom>\n        The value of <em>n</em> is: <strong>{n}</strong>.\n      </Typography>\n      <Typography variant=\"h5\" gutterBottom>\n        The value of <em>&phi;(n)</em> is: <strong>{phi}</strong>.\n      </Typography>\n      <Typography variant=\"h5\" gutterBottom>\n        Enter a public key, <em>e (1 &lt; e &lt; {phi})</em>, such that{\" \"}\n        <em>e</em> and <em>{phi}</em> are relatively prime (The <em>gcd</em> of{\" \"}\n        <em>e</em> and <em>{phi}</em> is <em>1</em>).\n      </Typography>\n      <div className=\"eform__form\">\n        <FormControl className=\"eform__formControl\" variant=\"outlined\">\n          <TextField\n            id=\"outlined-p-value\"\n            type=\"number\"\n            inputRef={evalue}\n            variant=\"outlined\"\n            label=\"Enter the value of e\"\n          />\n        </FormControl>\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className=\"eform__button\"\n        onClick={submit}\n      >\n        Next\n      </Button>\n    </Paper>\n  );\n}\n\nexport default EForm;\n","import React, { useCallback, useRef } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport \"./EncryptOrDecrypt.css\";\nimport { useStateValue } from \"../../StateProvider\";\n\nfunction EncryptOrDecrypt() {\n  const [{ d, e, n, cipher, message }, dispatch] = useStateValue();\n\n  const messageInput = useRef();\n  const cipherInput = useRef();\n\n  const encryptMessage = useCallback(() => {\n    dispatch({\n      type: \"Encrypt\",\n      item: {\n        message: messageInput.current.value,\n      },\n    });\n  }, [dispatch]);\n\n  const decryptCipher = useCallback(() => {\n    dispatch({\n      type: \"Decrypt\",\n      item: {\n        cipher: cipherInput.current.value,\n      },\n    });\n  }, [dispatch]);\n\n  return (\n    <Paper elevation={2} className=\"encryptOrDecrypt__container\">\n      <div style={{ textAlign: \"center\" }}>\n        <Typography variant=\"h5\" gutterBottom>\n          The private key, <em>d</em> is: <strong>{d}</strong>.\n        </Typography>\n        <Typography variant=\"h5\" gutterBottom>\n          So, public key pair, <em>(e, n)</em> is:{\" \"}\n          <strong>\n            ({e}, {n})\n          </strong>\n        </Typography>\n        <Typography variant=\"h5\" gutterBottom>\n          So, private key pair, <em>(d, n)</em> is:{\" \"}\n          <strong>\n            ({d}, {n})\n          </strong>\n        </Typography>\n      </div>\n      <Typography variant=\"h5\" gutterBottom>\n        Enter a message to encrypt\n      </Typography>\n      <div className=\"encryptOrDecrypt__form\">\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <FormControl\n              fullWidth\n              className=\"encryptOrDecrypt__formControl\"\n              variant=\"outlined\"\n            >\n              <TextField\n                id=\"outlined-p-value\"\n                type=\"number\"\n                inputRef={messageInput}\n                multiline={true}\n                rows={5}\n                rowsMax={5}\n                variant=\"outlined\"\n                label=\"Enter a message to encrypt\"\n              />\n            </FormControl>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"body1\" gutterBottom>\n              {cipher}\n            </Typography>\n          </Grid>\n        </Grid>\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className=\"encryptOrDecrypt__button\"\n        onClick={encryptMessage}\n      >\n        Encrypt\n      </Button>\n      <Typography variant=\"h5\" gutterBottom style={{ marginTop: \"32px\" }}>\n        Enter cipher text to decrypt the message\n      </Typography>\n      <div className=\"encryptOrDecrypt__form\">\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <FormControl\n              fullWidth\n              className=\"encryptOrDecrypt__formControl\"\n              variant=\"outlined\"\n            >\n              <TextField\n                id=\"outlined-p-value\"\n                type=\"number\"\n                inputRef={cipherInput}\n                multiline={true}\n                rows={5}\n                rowsMax={5}\n                variant=\"outlined\"\n                label=\"Enter the cipher text to decrypt the message\"\n              />\n            </FormControl>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"body1\" gutterBottom>\n              {message}\n            </Typography>\n          </Grid>\n        </Grid>\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className=\"encryptOrDecrypt__button\"\n        onClick={decryptCipher}\n      >\n        Decrypt\n      </Button>\n    </Paper>\n  );\n}\n\nexport default EncryptOrDecrypt;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport \"./Main.css\";\nimport PQForms from \"./PQForms\";\nimport EForm from \"./EForm\";\nimport { useStateValue } from \"../../StateProvider\";\nimport EncryptOrDecrypt from \"./EncryptOrDecrypt\";\n\nfunction Main() {\n  const [{ errorbag }] = useStateValue();\n\n  const [hasError, setHasError] = useState(true);\n\n  const handleSnackbarOpen = useCallback(() => {\n    setHasError(true);\n  }, [setHasError]);\n\n  const handleSnackbarClose = useCallback(() => {\n    setHasError(false);\n  }, [setHasError]);\n\n  useEffect(() => {\n    if (errorbag.length > 0) {\n      handleSnackbarOpen();\n    } else {\n      handleSnackbarClose();\n    }\n  });\n\n  return (\n    <main className=\"main\">\n      <Container fixed>\n        <PQForms />\n        <EForm />\n        <EncryptOrDecrypt />\n      </Container>\n      <Snackbar open={hasError} onClose={handleSnackbarClose}>\n        <Alert onClose={handleSnackbarClose} severity=\"error\">\n          {errorbag?.map((error) => (\n            <li key={error.message}>{error.message}</li>\n          ))}\n        </Alert>\n      </Snackbar>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\n\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <div className=\"footer__copyrightNotice\">\n        Created by Rashedul Alam. &copy; All rights reserved.\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Header from \"./components/Header/Header\";\nimport Main from \"./components/Main/Main\";\nimport Footer from \"./components/Footer/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navbar />\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* global BigInt */\n\nconst randojs = require(\"@nastyox/rando.js\");\nconst rando = randojs.rando;\n\nexport const initialState = {\n  p: \"0\",\n  q: \"0\",\n  n: \"0\",\n  phi: \"0\",\n  e: \"0\",\n  d: \"0\",\n  cipher: \"\",\n  message: \"\",\n  errorbag: [],\n};\n\nconst power = (a, b, n) => {\n  [a, b, n] = [BigInt(a), BigInt(b), BigInt(n)];\n  let res = BigInt(1);\n  a %= n;\n  while (b > BigInt(0)) {\n    if (b & BigInt(1)) res = (res * a) % n;\n    b >>= BigInt(1);\n    a = (a * a) % n;\n  }\n  return res;\n};\n\nfunction modInverse(a, m) {\n  [a, m] = [BigInt(a), BigInt(m)];\n\n  a = ((a % m) + m) % m;\n  if (!a || m < BigInt(2)) {\n    return NaN; // invalid input\n  }\n  // find the gcd\n  const s = [];\n  let b = m;\n  while (b) {\n    [a, b] = [b, a % b];\n    s.push({ a, b });\n  }\n  if (a !== BigInt(1)) {\n    return NaN; // inverse does not exists\n  }\n  // find the inverse\n  let x = BigInt(1);\n  let y = BigInt(0);\n  for (let i = s.length - 2; i >= 0; --i) {\n    [x, y] = [y, x - y * (s[i].a / s[i].b)];\n  }\n  return ((y % m) + m) % m;\n}\n\nconst millerTest = (d, n) => {\n  [d, n] = [BigInt(d), BigInt(n)];\n  const a =\n    BigInt(2) +\n    (BigInt(rando(100000000, 10000000000000000000000)) % (n - BigInt(4)));\n  let p = power(a, d, n);\n  if (p === BigInt(1) || p === n - BigInt(1)) return true;\n\n  while (d !== n - BigInt(1)) {\n    p = (p * p) % n;\n    d *= BigInt(2);\n\n    if (p === BigInt(1)) return false;\n\n    if (p === n - BigInt(1)) return true;\n  }\n  return false;\n};\n\nconst checkPrime = (n) => {\n  n = BigInt(n);\n\n  if (n <= BigInt(1) || n === BigInt(4)) return false;\n  if (n <= BigInt(3)) return true;\n  let d = n - BigInt(1);\n\n  while (d % BigInt(2) === BigInt(0)) d /= BigInt(2);\n  for (var i = 0; i < 2000; ++i) {\n    if (!millerTest(d, n)) return false;\n  }\n  return true;\n};\n\nconst gcd = (a, b) => {\n  [a, b] = [BigInt(a), BigInt(b)];\n  if (a === BigInt(0)) return b;\n  if (b === BigInt(0)) return a;\n  return gcd(b, a % b);\n};\n\nconst encryptMessage = (message, e, n, phi) => {\n  [e, n] = [BigInt(e), BigInt(n)];\n\n  if (e <= BigInt(1) || e >= BigInt(phi)) return \"\";\n  if (n <= BigInt(127)) return \"\";\n\n  const cipher = [];\n\n  for (var i = 0; i < message.length; ++i) {\n    const character = BigInt(message.charCodeAt(i));\n    const encrypted = power(character, e, n);\n    cipher.push(encrypted.toString());\n  }\n  return String.fromCharCode(...cipher);\n};\n\nconst decryptCipher = (cipher, d, n) => {\n  [d, n] = [BigInt(d), BigInt(n)];\n\n  if (d <= BigInt(0)) return \"\";\n  if (n <= BigInt(127)) return \"\";\n\n  const originalMessage = [];\n\n  for (var i = 0; i < cipher.length; ++i) {\n    const character = BigInt(cipher.charCodeAt(i));\n    const decrypted = power(character, d, n);\n    originalMessage.push(decrypted.toString());\n  }\n  return String.fromCharCode(...originalMessage);\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n  console.log(state);\n  switch (action.type) {\n    case \"SET_P_AND_Q\": {\n      const p = BigInt(action.item.p);\n      const q = BigInt(action.item.q);\n      if (!checkPrime(p) || !checkPrime(q)) {\n        return {\n          ...state,\n          errorbag: [{ message: \"P and Q should be prime numbers.\" }],\n        };\n      }\n      if (p * q <= 127) {\n        return {\n          ...state,\n          errorbag: [{ message: \"P * Q is less than 127.\" }],\n        };\n      }\n      const n = p * q;\n      const phi = (p - BigInt(1)) * (q - BigInt(1));\n      return {\n        ...state,\n        p: p.toString(),\n        q: q.toString(),\n        n: n.toString(),\n        phi: phi.toString(),\n        errorbag: [],\n      };\n    }\n    case \"SET_E\": {\n      const e = BigInt(action.item.e);\n\n      if (e <= 1 || e >= BigInt(state.phi)) {\n        return {\n          ...state,\n          errorbag: [\n            { message: \"e must be greater than 1 and less than phi.\" },\n          ],\n        };\n      }\n\n      if (gcd(e, state.phi) !== BigInt(1)) {\n        return {\n          ...state,\n          errorbag: [{ message: \"The gcd of e and phi is not 1.\" }],\n        };\n      }\n\n      const d = BigInt(modInverse(e, state.phi));\n\n      return {\n        ...state,\n        e: e.toString(),\n        d: d.toString(),\n        errorbag: [],\n      };\n    }\n    case \"Encrypt\": {\n      const message = action.item.message;\n      const cipher = encryptMessage(message, state.e, state.n, state.phi);\n\n      console.log(cipher);\n\n      return {\n        ...state,\n        cipher,\n        errorbag: [],\n      };\n    }\n    case \"Decrypt\": {\n      const cipher = action.item.cipher;\n      const message = decryptCipher(cipher, state.d, state.n);\n\n      return {\n        ...state,\n        message,\n        errorbag: [],\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from \"./Reducer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}