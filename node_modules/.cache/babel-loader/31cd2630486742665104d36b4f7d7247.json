{"ast":null,"code":"var _jsxFileName = \"/mnt/b37daa4f-64b1-411a-b35c-59820ce6f767/Documents/Projects/rsa-calculator 2/src/components/Main/EncryptOrDecrypt.js\";\nimport React, { useCallback, useRef } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./EncryptOrDecrypt.css\";\nimport { useStateValue } from \"../../StateProvider\";\n\nfunction EncryptOrDecrypt() {\n  const [{\n    d,\n    e,\n    n,\n    cipher,\n    message\n  }, dispatch] = useStateValue();\n  const messageInput = useRef();\n  const cipherInput = useRef();\n  const encryptMessage = useCallback(() => {\n    dispatch({\n      type: \"Encrypt\",\n      item: {\n        message: messageInput.current.value\n      }\n    });\n  }, [dispatch]);\n  const decryptCipher = useCallback(() => {\n    dispatch({\n      type: \"Decrypt\",\n      item: {\n        cipher: cipherInput.current.value\n      }\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 2,\n    className: \"encryptOrDecrypt__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"The private key, \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 28\n    }\n  }, \"d\"), \" is: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 43\n    }\n  }, d), \".\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"So, public key pair, \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 32\n    }\n  }, \"(e, n)\"), \" is:\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"(\", e, \", \", n, \")\")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"So, private key pair, \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  }, \"(d, n)\"), \" is:\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"(\", d, \", \", n, \")\"))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Enter a message to encrypt\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"encryptOrDecrypt__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    className: \"encryptOrDecrypt__formControl\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-p-value\",\n    type: \"number\",\n    inputRef: messageInput,\n    multiline: true,\n    rows: 5,\n    rowsMax: 5,\n    variant: \"outlined\",\n    label: \"Enter a message to encrypt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, cipher)))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"encryptOrDecrypt__button\",\n    onClick: encryptMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Encrypt\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    style: {\n      marginTop: \"32px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Enter cipher text to decrypt the message\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"encryptOrDecrypt__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    className: \"encryptOrDecrypt__formControl\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-p-value\",\n    type: \"number\",\n    inputRef: cipherInput,\n    multiline: true,\n    rows: 5,\n    rowsMax: 5,\n    variant: \"outlined\",\n    label: \"Enter the cipher text to decrypt the message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, message)))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"encryptOrDecrypt__button\",\n    onClick: decryptCipher,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"Decrypt\"));\n}\n\nexport default EncryptOrDecrypt;","map":{"version":3,"sources":["/mnt/b37daa4f-64b1-411a-b35c-59820ce6f767/Documents/Projects/rsa-calculator 2/src/components/Main/EncryptOrDecrypt.js"],"names":["React","useCallback","useRef","Paper","Grid","FormControl","TextField","Typography","Button","useStateValue","EncryptOrDecrypt","d","e","n","cipher","message","dispatch","messageInput","cipherInput","encryptMessage","type","item","current","value","decryptCipher","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport \"./EncryptOrDecrypt.css\";\nimport { useStateValue } from \"../../StateProvider\";\n\nfunction EncryptOrDecrypt() {\n  const [{ d, e, n, cipher, message }, dispatch] = useStateValue();\n\n  const messageInput = useRef();\n  const cipherInput = useRef();\n\n  const encryptMessage = useCallback(() => {\n    dispatch({\n      type: \"Encrypt\",\n      item: {\n        message: messageInput.current.value,\n      },\n    });\n  }, [dispatch]);\n\n  const decryptCipher = useCallback(() => {\n    dispatch({\n      type: \"Decrypt\",\n      item: {\n        cipher: cipherInput.current.value,\n      },\n    });\n  }, [dispatch]);\n\n  return (\n    <Paper elevation={2} className=\"encryptOrDecrypt__container\">\n      <div style={{ textAlign: \"center\" }}>\n        <Typography variant=\"h5\" gutterBottom>\n          The private key, <em>d</em> is: <strong>{d}</strong>.\n        </Typography>\n        <Typography variant=\"h5\" gutterBottom>\n          So, public key pair, <em>(e, n)</em> is:{\" \"}\n          <strong>\n            ({e}, {n})\n          </strong>\n        </Typography>\n        <Typography variant=\"h5\" gutterBottom>\n          So, private key pair, <em>(d, n)</em> is:{\" \"}\n          <strong>\n            ({d}, {n})\n          </strong>\n        </Typography>\n      </div>\n      <Typography variant=\"h5\" gutterBottom>\n        Enter a message to encrypt\n      </Typography>\n      <div className=\"encryptOrDecrypt__form\">\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <FormControl\n              fullWidth\n              className=\"encryptOrDecrypt__formControl\"\n              variant=\"outlined\"\n            >\n              <TextField\n                id=\"outlined-p-value\"\n                type=\"number\"\n                inputRef={messageInput}\n                multiline={true}\n                rows={5}\n                rowsMax={5}\n                variant=\"outlined\"\n                label=\"Enter a message to encrypt\"\n              />\n            </FormControl>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"body1\" gutterBottom>\n              {cipher}\n            </Typography>\n          </Grid>\n        </Grid>\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className=\"encryptOrDecrypt__button\"\n        onClick={encryptMessage}\n      >\n        Encrypt\n      </Button>\n      <Typography variant=\"h5\" gutterBottom style={{ marginTop: \"32px\" }}>\n        Enter cipher text to decrypt the message\n      </Typography>\n      <div className=\"encryptOrDecrypt__form\">\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <FormControl\n              fullWidth\n              className=\"encryptOrDecrypt__formControl\"\n              variant=\"outlined\"\n            >\n              <TextField\n                id=\"outlined-p-value\"\n                type=\"number\"\n                inputRef={cipherInput}\n                multiline={true}\n                rows={5}\n                rowsMax={5}\n                variant=\"outlined\"\n                label=\"Enter the cipher text to decrypt the message\"\n              />\n            </FormControl>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"body1\" gutterBottom>\n              {message}\n            </Typography>\n          </Grid>\n        </Grid>\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className=\"encryptOrDecrypt__button\"\n        onClick={decryptCipher}\n      >\n        Decrypt\n      </Button>\n    </Paper>\n  );\n}\n\nexport default EncryptOrDecrypt;\n"]},"metadata":{},"sourceType":"module"}