{"ast":null,"code":"/* global BigInt */\nconst randojs = require(\"@nastyox/rando.js\");\n\nconst rando = randojs.rando;\nexport const initialState = {\n  p: BigInt(0),\n  q: BigInt(0),\n  n: BigInt(0),\n  phi: BigInt(0),\n  e: BigInt(0),\n  d: BigInt(0),\n  errorbag: new Set()\n};\n\nconst power = (a, b, n) => {\n  [a, b, n] = [BigInt(a), BigInt(b), BigInt(n)];\n  let res = BigInt(1);\n  a %= n;\n\n  while (b > BigInt(0)) {\n    if (b & BigInt(1)) res = res * a % n;\n    b >>= BigInt(1);\n    a = a * a % n;\n  }\n\n  return res;\n};\n\nconst millerTest = (d, n) => {\n  [d, n] = [BigInt(d), BigInt(n)];\n  const a = BigInt(2) + BigInt(rando(100000000, 10000000000000000000000)) % (n - BigInt(4));\n  let p = power(a, d, n);\n  if (p === BigInt(1) || p === n - BigInt(1)) return true;\n\n  while (d !== n - BigInt(1)) {\n    p = p * p % n;\n    d *= BigInt(2);\n    if (p === BigInt(1)) return false;\n    if (p === n - BigInt(1)) return true;\n  }\n\n  return false;\n};\n\nconst checkPrime = n => {\n  n = BigInt(n);\n  if (n <= BigInt(1) || n === BigInt(4)) return false;\n  if (n <= BigInt(3)) return true;\n  let d = n - BigInt(1);\n\n  while (d % BigInt(2) === BigInt(0)) d /= BigInt(2);\n\n  for (var i = 0; i < 2000; ++i) {\n    if (!millerTest(d, n)) return false;\n  }\n\n  return true;\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n  console.log(state);\n\n  switch (action.type) {\n    case \"SET_P_AND_Q\":\n      {\n        const p = BigInt(action.item.p);\n        const q = BigInt(action.item.q);\n\n        if (!checkPrime(p) || !checkPrime(q)) {\n          return { ...state,\n            errorbag: [...state.errorbag, {\n              message: \"P and Q should be prime numbers.\"\n            }]\n          };\n        }\n\n        if (p * q <= 256) {\n          return { ...state,\n            errorbag: [...state.errorbag, {\n              message: \"P * Q is less than 256.\"\n            }]\n          };\n        }\n\n        const n = p * q;\n        const phi = (p - BigInt(1)) * (q - BigInt(1));\n        action.onSuccessCallback();\n        return { ...state,\n          p,\n          q,\n          n,\n          phi,\n          errorbag: []\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/mnt/b37daa4f-64b1-411a-b35c-59820ce6f767/Documents/Projects/rsa-calculator/src/Reducer.js"],"names":["randojs","require","rando","initialState","p","BigInt","q","n","phi","e","d","errorbag","Set","power","a","b","res","millerTest","checkPrime","i","reducer","state","action","console","log","type","item","message","onSuccessCallback"],"mappings":"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","sourcesContent":["/* global BigInt */\n\nconst randojs = require(\"@nastyox/rando.js\");\nconst rando = randojs.rando;\n\nexport const initialState = {\n  p: BigInt(0),\n  q: BigInt(0),\n  n: BigInt(0),\n  phi: BigInt(0),\n  e: BigInt(0),\n  d: BigInt(0),\n  errorbag: new Set(),\n};\n\nconst power = (a, b, n) => {\n  [a, b, n] = [BigInt(a), BigInt(b), BigInt(n)];\n  let res = BigInt(1);\n  a %= n;\n  while (b > BigInt(0)) {\n    if (b & BigInt(1)) res = (res * a) % n;\n    b >>= BigInt(1);\n    a = (a * a) % n;\n  }\n  return res;\n};\n\nconst millerTest = (d, n) => {\n  [d, n] = [BigInt(d), BigInt(n)];\n  const a =\n    BigInt(2) +\n    (BigInt(rando(100000000, 10000000000000000000000)) % (n - BigInt(4)));\n  let p = power(a, d, n);\n  if (p === BigInt(1) || p === n - BigInt(1)) return true;\n\n  while (d !== n - BigInt(1)) {\n    p = (p * p) % n;\n    d *= BigInt(2);\n\n    if (p === BigInt(1)) return false;\n\n    if (p === n - BigInt(1)) return true;\n  }\n  return false;\n};\n\nconst checkPrime = (n) => {\n  n = BigInt(n);\n\n  if (n <= BigInt(1) || n === BigInt(4)) return false;\n  if (n <= BigInt(3)) return true;\n  let d = n - BigInt(1);\n\n  while (d % BigInt(2) === BigInt(0)) d /= BigInt(2);\n  for (var i = 0; i < 2000; ++i) {\n    if (!millerTest(d, n)) return false;\n  }\n  return true;\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n  console.log(state);\n  switch (action.type) {\n    case \"SET_P_AND_Q\": {\n      const p = BigInt(action.item.p);\n      const q = BigInt(action.item.q);\n      if (!checkPrime(p) || !checkPrime(q)) {\n        return {\n          ...state,\n          errorbag: [\n            ...state.errorbag,\n            { message: \"P and Q should be prime numbers.\" },\n          ],\n        };\n      }\n      if (p * q <= 256) {\n        return {\n          ...state,\n          errorbag: [...state.errorbag, { message: \"P * Q is less than 256.\" }],\n        };\n      }\n      const n = p * q;\n      const phi = (p - BigInt(1)) * (q - BigInt(1));\n      action.onSuccessCallback();\n      return { ...state, p, q, n, phi, errorbag: [] };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}