{"ast":null,"code":"import _toConsumableArray from\"/mnt/b37daa4f-64b1-411a-b35c-59820ce6f767/Documents/Projects/rsa-calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/mnt/b37daa4f-64b1-411a-b35c-59820ce6f767/Documents/Projects/rsa-calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/* global BigInt */var randojs=require(\"@nastyox/rando.js\");var rando=randojs.rando;export var initialState={p:BigInt(0),q:BigInt(0),n:BigInt(0),phi:BigInt(0),e:BigInt(0),d:BigInt(0),errorbag:[]};var power=function power(a,b,n){var _ref=[BigInt(a),BigInt(b),BigInt(n)];a=_ref[0];b=_ref[1];n=_ref[2];var res=BigInt(1);a%=n;while(b>BigInt(0)){if(b&BigInt(1))res=res*a%n;b>>=BigInt(1);a=a*a%n;}return res;};var millerTest=function millerTest(d,n){var _ref2=[BigInt(d),BigInt(n)];d=_ref2[0];n=_ref2[1];var a=BigInt(2)+BigInt(rando(100000000,10000000000000000000000))%(n-BigInt(4));var p=power(a,d,n);if(p===BigInt(1)||p===n-BigInt(1))return true;while(d!==n-BigInt(1)){p=p*p%n;d*=BigInt(2);if(p===BigInt(1))return false;if(p===n-BigInt(1))return true;}return false;};var checkPrime=function checkPrime(n){n=BigInt(n);if(n<=BigInt(1)||n===BigInt(4))return false;if(n<=BigInt(3))return true;var d=n-BigInt(1);while(d%BigInt(2)===BigInt(0)){d/=BigInt(2);}for(var i=0;i<2000;++i){if(!millerTest(d,n))return false;}return true;};var reducer=function reducer(state,action){console.log(action);switch(action.type){case\"SET_P_AND_Q\":{var p=BigInt(action.item.p);var q=BigInt(action.item.q);if(!checkPrime(p)||!checkPrime(q)){return _objectSpread(_objectSpread({},state),{},{errorbag:[].concat(_toConsumableArray(state.errorbag),[{message:\"P and Q should be prime numbers.\"}])});}var n=p*q;var phi=(p-BigInt(1))*(q-BigInt(1));return _objectSpread(_objectSpread({},state),{},{p:p,q:q,n:n,phi:phi,errorbag:[]});}default:return state;}};export default reducer;","map":{"version":3,"sources":["/mnt/b37daa4f-64b1-411a-b35c-59820ce6f767/Documents/Projects/rsa-calculator/src/Reducer.js"],"names":["randojs","require","rando","initialState","p","BigInt","q","n","phi","e","d","errorbag","power","a","b","res","millerTest","checkPrime","i","reducer","state","action","console","log","type","item","message"],"mappings":"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","sourcesContent":["/* global BigInt */\n\nconst randojs = require(\"@nastyox/rando.js\");\nconst rando = randojs.rando;\n\nexport const initialState = {\n  p: BigInt(0),\n  q: BigInt(0),\n  n: BigInt(0),\n  phi: BigInt(0),\n  e: BigInt(0),\n  d: BigInt(0),\n  errorbag: [],\n};\n\nconst power = (a, b, n) => {\n  [a, b, n] = [BigInt(a), BigInt(b), BigInt(n)];\n  let res = BigInt(1);\n  a %= n;\n  while (b > BigInt(0)) {\n    if (b & BigInt(1)) res = (res * a) % n;\n    b >>= BigInt(1);\n    a = (a * a) % n;\n  }\n  return res;\n};\n\nconst millerTest = (d, n) => {\n  [d, n] = [BigInt(d), BigInt(n)];\n  const a =\n    BigInt(2) +\n    (BigInt(rando(100000000, 10000000000000000000000)) % (n - BigInt(4)));\n  let p = power(a, d, n);\n  if (p === BigInt(1) || p === n - BigInt(1)) return true;\n\n  while (d !== n - BigInt(1)) {\n    p = (p * p) % n;\n    d *= BigInt(2);\n\n    if (p === BigInt(1)) return false;\n\n    if (p === n - BigInt(1)) return true;\n  }\n  return false;\n};\n\nconst checkPrime = (n) => {\n  n = BigInt(n);\n\n  if (n <= BigInt(1) || n === BigInt(4)) return false;\n  if (n <= BigInt(3)) return true;\n  let d = n - BigInt(1);\n\n  while (d % BigInt(2) === BigInt(0)) d /= BigInt(2);\n  for (var i = 0; i < 2000; ++i) {\n    if (!millerTest(d, n)) return false;\n  }\n  return true;\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"SET_P_AND_Q\": {\n      const p = BigInt(action.item.p);\n      const q = BigInt(action.item.q);\n      if (!checkPrime(p) || !checkPrime(q)) {\n        return {\n          ...state,\n          errorbag: [\n            ...state.errorbag,\n            { message: \"P and Q should be prime numbers.\" },\n          ],\n        };\n      }\n      const n = p * q;\n      const phi = (p - BigInt(1)) * (q - BigInt(1));\n      return { ...state, p, q, n, phi, errorbag: [] };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}